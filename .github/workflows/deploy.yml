# .github/workflows/deploy.yml
name: Deploy Strapi to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install & Build Strapi
        run: |
          npm ci
          npm run build

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy and Restart on EC2
        run: |
          # Create deploy directory
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            mkdir -p /home/ubuntu/strapi-deploy
          EOF

          # Upload built code
          rsync -avz \
            --exclude node_modules \
            --exclude .git \
            --exclude .env \
            . ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/strapi-deploy/

          # Run deployment commands
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/strapi-deploy

            # Copy to final location
            rsync -avz --delete \
              --exclude .env \
              --exclude docker-compose.yml \
              ./ /home/ubuntu/strapi-on-aws/my-strapi-app/my-app/

            # Go to app dir
            cd /home/ubuntu/strapi-on-aws/my-strapi-app/my-app

            # Stop current containers
            docker-compose down

            # Remove old node_modules and build cache
            rm -rf node_modules .tmp build
            npm ci --production

            # Rebuild admin
            npm run build

            # Start services
            docker-compose up -d

            # Optional: Check if Strapi is healthy
            echo "âœ… Deploy complete. Checking service status..."
            docker ps | grep strapi
          EOF
